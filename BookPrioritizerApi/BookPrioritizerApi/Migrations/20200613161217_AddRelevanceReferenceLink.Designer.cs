// <auto-generated />
using System;
using BookPrioritizerApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookPrioritizerApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200613161217_AddRelevanceReferenceLink")]
    partial class AddRelevanceReferenceLink
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookPrioritizerApi.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("BookPrioritizerApi.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AmazonRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("AmazonVotes")
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("GoodReadsRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("GoodReadsVotes")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("UniqueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("StatusId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BookPrioritizerApi.Models.ReferenceLink", b =>
                {
                    b.Property<int>("ReferenceLinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReferenceLinkId");

                    b.ToTable("ReferenceLinks");
                });

            modelBuilder.Entity("BookPrioritizerApi.Models.Relevance", b =>
                {
                    b.Property<int>("RelevanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RelevanceId");

                    b.ToTable("Relevances");

                    b.HasData(
                        new
                        {
                            RelevanceId = 1,
                            Level = 0,
                            Name = "Not Relevant"
                        },
                        new
                        {
                            RelevanceId = 2,
                            Level = 1,
                            Name = "Little Relevant"
                        },
                        new
                        {
                            RelevanceId = 3,
                            Level = 2,
                            Name = "Somewhat Relevant"
                        },
                        new
                        {
                            RelevanceId = 4,
                            Level = 3,
                            Name = "Mostly Relevant"
                        },
                        new
                        {
                            RelevanceId = 5,
                            Level = 4,
                            Name = "Completely Relevant"
                        });
                });

            modelBuilder.Entity("BookPrioritizerApi.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            Name = "Read"
                        },
                        new
                        {
                            StatusId = 2,
                            Name = "Downloaded"
                        },
                        new
                        {
                            StatusId = 3,
                            Name = "Not Downloaded"
                        },
                        new
                        {
                            StatusId = 4,
                            Name = "Not Found"
                        },
                        new
                        {
                            StatusId = 5,
                            Name = "Hide"
                        });
                });

            modelBuilder.Entity("BookPrioritizerApi.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("BookPrioritizerApi.Models.TagBook", b =>
                {
                    b.Property<int>("TagBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("GoodReadsRank")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceId")
                        .HasColumnType("int");

                    b.Property<int?>("Shelved")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("TagBookId");

                    b.HasIndex("BookId");

                    b.HasIndex("RelevanceId");

                    b.HasIndex("TagId");

                    b.ToTable("TagBooks");
                });

            modelBuilder.Entity("BookPrioritizerApi.Models.Book", b =>
                {
                    b.HasOne("BookPrioritizerApi.Models.Author", "Author")
                        .WithMany("Book")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookPrioritizerApi.Models.Status", "Status")
                        .WithMany("Book")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookPrioritizerApi.Models.TagBook", b =>
                {
                    b.HasOne("BookPrioritizerApi.Models.Book", "Book")
                        .WithMany("TagBook")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookPrioritizerApi.Models.Relevance", "Relevance")
                        .WithMany("TagBook")
                        .HasForeignKey("RelevanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookPrioritizerApi.Models.Tag", "Tag")
                        .WithMany("TagBook")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
